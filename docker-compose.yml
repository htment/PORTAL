version: '3.8'

services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: "app_db"
      MYSQL_USER: "art"
      MYSQL_PASSWORD: "1234"
      # Добавляем эту настройку, чтобы разрешить подключение с любого хоста
      MYSQL_ROOT_HOST: "%"  # Разрешает root-доступ не только из localhost
    command: 
      - "--default-authentication-plugin=mysql_native_password"  # Упрощает аутентификацию
      - "--bind-address=0.0.0.0"  # Разрешает подключение извне контейнера
    volumes:
      - mysql_data:/var/lib/mysql
    # НОВАЯ СТРОКА: Монтируем наш SQL-скрипт для инициализации привилегий
      - ./mysql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - backend
    restart: unless-stopped  # Автоматически перезапускать контейнер при падении

  php1:
    image: php:8.2-fpm
    volumes:
      - ./src:/var/www/html
    networks:
      - backend
      - frontend
    # Устанавливаем mysqli и другие нужные расширения
    command: sh -c "docker-php-ext-install mysqli && php-fpm"
    # ИЛИ через отдельный скрипт (лучше для сложных конфигураций)
    # command: sh -c "/usr/local/bin/setup-php-extensions && php-fpm"

  php2:
    image: php:8.2-fpm
    volumes:
      - ./src:/var/www/html
    networks:
      - backend
      - frontend
    command: sh -c "docker-php-ext-install mysqli && php-fpm"

  nginx:
    image: nginx:alpine
    ports:
      - "8888:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend
    depends_on:
      - php1
      - php2

  haproxy:
    image: haproxy:2.8
    ports:
      - "80:80"
      - "8088:8088"
      - "8404:8404"
      - "1325:1325"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - frontend
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: "mysql"
    ports:
      - "8080:80"
    networks:
      - backend

volumes:
  mysql_data:

networks:
  frontend:
  backend: